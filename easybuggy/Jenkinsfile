pipeline { 
  agent any 
  
  stages { 
     stage('clean workspace'){
        steps{ 
           cleanWs()
        }
     }

     stage('Checkout from Git'){
        steps{ 
           git branch: 'main', url : 'https://github.com/amitvashisttech/applicationtesting-sast-dast-aristocart-04-Jun-2024.git'
        }
     }

    
     stage('Maven CleanUP'){
        steps{ 
           sh 'mvn clean -f  03-Easybuggy/pom.xml'
        }
     }


     stage('Maven Compile'){
        steps{ 
           sh 'mvn compile -f  03-Easybuggy/pom.xml'
        }
     }

     stage('Maven Package'){
        steps{ 
           sh 'mvn package -f  03-Easybuggy/pom.xml'
        }
     }

     stage('SonarQubeScan'){
      withSonarQubeEnv('Sonar'){
        steps{ 
           sh 'mvn sonar:sonar -f  03-Easybuggy/pom.xml'
        }
      }
     }


     stage('Archive Artifacts - JAR'){
        steps{ 
           archive '03-Easybuggy/target/*.jar'
        }
     }


     stage('Docker CleanUp Easybuggy'){
        steps{
           script { 
           def containerName = '03-easybuggy_easybuggy_1' 

           
           sh """
           if docker ps -a --format '{{.Names}}' | grep -q "^${containerName}\$"; then    
              docker kill ${containerName}
              docker rm ${containerName}
           else 
             echo "Container ${containerName} does not exist. Skipping.."
           fi
           """
        }
     }
   
   }

  }

}
